from collections import defaultdict

test_input = """125 17
"""

def parse_input(s):
    return tuple(map(int, s.split(" ")))

def counts(i):
    m = defaultdict(int)
    for n in i:
        m[n] += 1
    return m

def run_part1(i):
    m = counts(i)
    for _ in range(25):
        m = blink(m)
    print(sum(m.values()))

def blink(m):
    nm = defaultdict(int)
    for n, c in m.items():
        if n == 0:
            nm[1] += c
            continue
        s = str(n)
        if len(s) % 2 == 0:
            idx = len(s)//2
            nm[int(s[:idx])] += c
            nm[int(s[idx:])] += c
        else:
            nm[n * 2024] += c
    return nm

def run_part2(i):
    m = counts(i)
    for _ in range(75):
        m = blink(m)
    print(sum(m.values()))

### Generated by start script

def test_part1():
    run_part1(parse_input(test_input))

def part1():
    run_part1(parse_input(open("input.txt").read()))

def test_part2():
    run_part2(parse_input(test_input))

def part2():
    run_part2(parse_input(open("input.txt").read()))

def main():
    print("=== running part 1 test ===")
    test_part1()
    print("=== running part 1 ===")
    part1()
    print("=== running part 2 test ===")
    test_part2()
    print("=== running part 2 ===")
    part2()
    print("=== ===")

if __name__ == "__main__":
    main()
